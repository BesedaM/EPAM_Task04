Manipulating Relative Distringuished Name (RDN).
The class javax.naming.ldap.Rdn represents a Relative Distinguished name (RDN) as specified in RFC 2253. An RDN represents a component of a DN as explained in the Manipulating LdapName lesson. An RDN is made up of type and value pair(s). Examples of RDNs are:
- OU=Sun;
- OU=Sales+CN=J.Smith.
The above example shows a representation of a multi-valued RDN.
The Rdn class provides methods to access name/value pair(s) of an RDN, obtain its string representation, retrieve an Attributes view, compare and determine equality of RDNs and methods to escape and unescape the value part of the RDN.
The Rdn class is immutable.
Constructing an Rdn.
An Rdn can be constructed with the specified name and value pair, if it's a single name/value paired RDN. For a multi-valued RDN, you should create an attribute set consisting of all the name/value pairs and use a constructor that takes Attributes as an argument. You can also create an Rdn from its string representation specified in RFC 2253. Finally, you can clone an Rdn using its copy constructor. Here is an example that creates RDNs using different types of constructors.
Rdn rdn1 = new Rdn("ou= Juicy\\, Fruit");
System.out.println("rdn1:" + rdn1.toString());
Rdn rdn2 = new Rdn(rdn1);
Accessing type/value pairs of an RDN.
The type/values of and RDN can be obtained using the methods below:
- getType();
- getValue();
- toAttributes().
For a an RDN made up of single type/value pair, the getType()method returns the type and the getValue() method returns the value of the RDN. The method toAttributes() returns the attribute view of the type/value pairs. The example below prints the type/value pairs of RDNs.
Attributes attrs = new BasicAttributes();
attrs.put("o", "Yellow");
attrs.put("cn", "Mango");
// create a binary value for the RDN
byte[] mangoJuice = new byte[6];
